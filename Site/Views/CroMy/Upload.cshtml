@model CroResource
@{
	var id = this.ViewContext.RouteData.Values["id"] ?? ResSettings.SettingsInSession.UserId;
	Layout = "~/Views/Shared/_CroLayout.cshtml";
	ViewBag.Title = "上传新作品";
}

<script>
	if (navigator.userAgent.indexOf("MSIE") > 0) {
		if (navigator.userAgent.indexOf("MSIE 6.0") > 0 || navigator.userAgent.indexOf("MSIE 7.0") > 0 || navigator.userAgent.indexOf("MSIE 8.0") > 0 || navigator.userAgent.indexOf("MSIE 9.0") > 0) {
			alert("浏览器版本过低，请使用高版本的浏览器");
			location.href = "/CroHome/index/";
		}
	}
</script>

<div class="menu">
	<div class="fl">首页 > <span>论文上传</span></div>
</div>

<div class="full_white">

	<div class="block_panel blue_edge">

		<div class="body">

			<div class="widget-content">

				<div class="uploadForms">
				</div>

				<div class="row">
					@using (Html.BeginForm("Upload", "CroMy", Model == null ? null : new { id = id, resid = Model.CrosourceId }, FormMethod.Post, new { id = "form", role = "form", @class = "form-horizontal" }))
					{
						@Html.HiddenFor(m => m.CrosourceId)
						@Html.HiddenFor(m => m.StatePKID)
						@Html.HiddenFor(m => m.AuditedTime)
						@Html.HiddenFor(m => m.Creator)
						@Html.HiddenFor(m => m.CreatedTime)
						@Html.HiddenFor(m => m.LastModifier)

						<fieldset class="col-sm-11  fieldContainer">

							@*<div class="form-group ">
									<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 所属活动</label>
									<div class="col-sm-9">
										@Html.DropDownListFor(m => m.ActiveId, (ViewBag.Actives as List<Active>).Select(x => new SelectListItem { Text = x.ActiveName, Value = x.ActiveId.ToString(), Selected = Model.ActiveId == Model.ActiveId }), "选择项目", new { @class = "form-control" })
									</div>
								</div>*@

							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 论文标题</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.Title, new { @class = "form-control", maxlength = "255", placeholder = "作品标题" })
									@Html.ValidationMessageFor(m => m.Title)
								</div>
							</div>
							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 论文主题</label>
								<div class="col-sm-9">
									@Html.DropDownListFor(m => m.ThemeId, (ViewBag.Themes as List<ResPickListItem>).Select(x => new SelectListItem { Text = x.Name, Value = x.PickListItemId.ToString() }), "选择主题", new { @class = "form-control" })
									@Html.ValidationMessageFor(m => m.ThemeId, null, new { @class = "text-danger" })
								</div>
							</div>
							<div class="form-group ">
									<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 省份</label>
									<div class="col-sm-9">
										@Html.DropDownListFor(m => m.ProvinceId, (ViewBag.Provinces as List<ResCompany>).Select(x => new SelectListItem { Text = x.CompanyName, Value = x.CompanyId.ToString() }), "选择省份", new { @class = "form-control" })
									   @Html.ValidationMessageFor(m => m.ProvinceId, null, new { @class = "text-danger" })
									</div>
								</div>

								<div class="form-group ">
									<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 地区</label>
									<div class="col-sm-9">
										@Html.DropDownListFor(m => m.AreaId, (ViewBag.Areas as List<ResCompany>).Select(x => new SelectListItem { Text = x.CompanyName, Value = x.CompanyId.ToString() }), "选择地区", new { @class = "form-control" })
										@Html.ValidationMessageFor(m => m.AreaId, null, new { @class = "text-danger" })
									</div>
								</div>

							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 作者姓名</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.Author, new { @class = "form-control", maxlength = "100", placeholder = "作者" })
									@Html.ValidationMessageFor(m => m.Author, null, new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 作者单位(全称)</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.AuthorCompany, new { @class = "form-control", maxlength = "255", placeholder = "作者所在单位" })
									@Html.ValidationMessageFor(m => m.AuthorCompany, null, new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 作者电话</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.AuthorPhone, new { @class = "form-control", maxlength = "255", placeholder = "作者电话" })
									@Html.ValidationMessageFor(m => m.AuthorPhone, null, new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request text-danger">*</span> 作者邮箱</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.AuthorEmail, new { @class = "form-control", maxlength = "255", placeholder = "作者电子邮箱" })
									@Html.ValidationMessageFor(m => m.AuthorEmail, null, new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group attachmentUploader uploader">
								<label class="control-label col-sm-3"> <span class="request text-danger">*</span>论文附件</label>

								<div class="col-sm-9">
									<div class="input-group">
										@Html.TextBoxFor(m => m.AttachmentName, new { @class = "form-control resource-path", maxlength = "255", placeholder = "上传论文附件", @readonly = "readonly" })
										
										<div class="input-group-btn">
											<button type="button" class="btn btn-default dropdown-toggle btn-upload" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-upload"></i> </button>
										</div>
									</div>
									@Html.ValidationMessageFor(m => m.AttachmentName, null, new { @class = "text-danger" })
									<div class="progress" style="display:none">
										<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
											<span class="sr-only"></span>
										</div>
									</div>
								</div>
								@Html.HiddenFor(x => x.AttachmentId, new { @class = "fileId" })
								@*<input type="hidden" class="fileId" value="@Model.AttachmentId" />*@
							</div>

							<div class="form-group">
								<div class="col-sm-10 col-sm-offset-1">
									<button type="submit" id="submit" class="btn btn-primary btn-block"><i class="fa fa-check-circle"></i> 确认上传</button>
								</div>
							</div>

						</fieldset>
					}

				</div>

			</div>

		</div>

	</div>

</div>
@section Css {
	@Styles.Render("~/css/tagsinput")
	@Styles.Render("~/css/app2")
}
@section Plugins {
	@Scripts.Render("~/js/dropzone")
	@Scripts.Render("~/js/tagsinput")

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.2/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.2/js/select2.min.js"></script>
<style>
</style>

}

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")

	<script type="text/javascript">
		$(function () {

			var areas=@Html.Raw(Json.Encode(ViewBag.AreasDic));
			RelationSelect($("#ProvinceId"), $("#AreaId"), areas, "选择地区");

			bindResourceUploader($('.attachmentUploader'), 'attachment', '.doc,.docx');

		});


		function bindResourceUploader(uploader, type, mimeTypes) {
			var action = '@Url.Action("UploadResource", "Attachment")';
			if (type == 'cover')
				action = '@Url.Action("UploadCover", "Attachment")';
			else if (type == 'video')
				action = '@Url.Action("UploadVideo", "Attachment")';

			$(uploader).each(function (i) {
				var dropzoneName = 'dropzone_' + type + i;
				var clock;
				if ($('.' + dropzoneName).size() <= 0) {
					var $uploader = $(this);
					$('.uploadForms').append($('<form action="' + action + '" class="' + dropzoneName + ' uploaderForm' + i + '"></form>'));
					$('.' + dropzoneName).dropzone({
						addRemoveLinks: !0,
						maxFilesize: 30,
						filesizeBase: 100 * 1024,
						maxFiles: 100,
						acceptedFiles: mimeTypes,
						thumbnailHeight: 200,
						dictResponseError: "上传文件失败",
						dictDefaultMessage: "上传文件",
						parallelUploads: 5,
						init: function () {
							this
								.on('processing', function (i) {
									var i = 0;
									clock = setInterval(function () {
										$uploader.find('.progress').show();
										if (i <= 99) {
											$uploader.find('.progress-bar').css('width', parseInt(++i) + "%").text(i + '%');
										}
									}, 1500)

								})
								.on('totaluploadprogress', function (i) {
								})
								.on('removedfile', function () {
								})
								.on('success', function (file, data) {
									clearInterval(clock);
									$uploader.find('.progress-bar').css('width', '100%').text('100%');
									$uploader.find('.resource-path').val(data.name);
									$uploader.find('.fileId').val(data.fileId);
									//如果是封面则显示
									if (type == 'cover') {
										var $uploadedImg = $('<img src="' + data.path + '" style="width:100%; height:100%" class="btn-upload">');
										$uploadedImg.on('click', function () { $('.' + dropzoneName).trigger('click'); });
										$uploader.find('.coverImageArea').html('').append($uploadedImg);
									}
									$uploader.find('.btn-cancel').removeClass('hidden').show();
								})
								.on('error', function (file, message) {
									alert("文件上传失败！");
								});
						}
					});

					$uploader.find('.btn-upload').unbind('click').on('click', function () {
						$("." + dropzoneName).trigger('click');
					});
				}

			});
		}


	</script>
}




